{"version":3,"sources":["swing/dist/Card.js","swing/dist/Direction.js","index.js","swing/dist/index.js","swing/dist/utilities.js","swing/dist/Stack.js","convert.js"],"names":["Object","defineProperty","exports","value","_lodash2","_interopRequireDefault","require","_sister2","_hammerjs2","_rebound2","_vendorPrefix2","_raf2","_Direction2","_utilities","obj","__esModule","default","computeDirection","fromX","fromY","allowedDirections","isHorizontal","Math","abs","isLeftDirection","LEFT","RIGHT","isUpDirection","UP","DOWN","direction","indexOf","INVALID","Card","stack","targetElement","prepend","card","config","currentX","currentY","doMove","eventEmitter","isDraging","isPanning","lastThrow","lastTranslate","lastX","lastY","mc","_onSpringUpdate","springSystem","springThrowIn","springThrowOut","throwDirectionToEventName","throwOutDistance","throwWhere","appendedDuringMouseDown","makeConfig","getConfig","getSpringSystem","createSpring","coordinateX","coordinateY","setRestSpeedThreshold","setRestDisplacementThreshold","minThrowOutDistance","maxThrowOutDistance","Manager","recognizers","Pan","threshold","on","appendToParent","trigger","target","animation","event","deltaX","deltaY","isThrowOut","throwOutConfidence","throwOut","throwIn","isTouchDevice","addEventListener","dragging","global","preventDefault","click","addListener","onSpringAtRest","onSpringUpdate","spring","getCurrentValue","coordianteX","MathUtil","mapValueInRange","coordianteY","directionFactor","rotation","maxRotation","transform","offset","throwDirection","where","THROW_IN","setCurrentValue","setAtRest","setEndValue","THROW_OUT","Error","setVelocity","destroy","destroyCard","arguments","length","undefined","defaultConfig","assign","element","style","parentNode","siblings","elementChildren","appended","removeChild","appendChild","prependToParent","insertBefore","firstChild","xOffset","yOffset","xConfidence","min","offsetWidth","yConfidence","offsetHeight","max","random","module","Direction","Symbol","swing","convert","props","String","split","left","right","i","ceil","splice","number","join","concat","filter","e","state","romaji","web_convert","kanji","hiragana","isFront","this","setState","className","settings","dispRomaji","dispHiragana","dispKanji","onClick","handleClick","front","back","Component","NumberGenerator","floor","level","rand","di","romaji_dict","keys","slice","parseInt","ReactSwing","Stack","id","Events","forEach","eventName","update","setStack","prevprops","children","React","Children","map","child","index","childProps","k","reduce","r","createElement","type","Settings","ref","createRef","key","htmlFor","name","defaultChecked","onChange","handleInputChange","Array","fill","_","App","context","generator","seen_cards","card_list","newCard","unshift","next","n","textContent","ind","new_state","checked","throwoutend","handleThrowEnd","settingsHandleInputChange","ReactDOM","render","document","getElementById","_Card2","_Stack2","_lodash","childNodes","nodeType","window","navigator","msMaxTouchPoints","list_id","SpringSystem","getIndex","listener","createCard","data","push","getCard","group","find","remove","cards","prototype","call","c","o","kanji_dict","hiragana_dict","key_dict","len_one","convert_num","requested_dict","len_two","num_list","x","len_three","len_four","len_x","dict_choice","result","replace","num","join_char","right_res","left_res","split_point"],"mappings":"gIAAA,YAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAEIC,EAAWC,EAFDC,EAAQ,IAMlBC,EAAWF,EAFDC,EAAQ,KAMlBE,EAAaH,EAFDC,EAAQ,KAMpBG,EAAYJ,EAFDC,EAAQ,KAMnBI,EAAiBL,EAFDC,EAAQ,KAMxBK,EAAQN,EAFDC,EAAQ,KAMfM,EAAcP,EAFDC,EAAQ,KAIrBO,EAAaP,EAAQ,IAEzB,SAASD,EAAuBS,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAQvF,IAAIG,EAAmB,SAA0BC,EAAOC,EAAOC,GAC7D,IAAIC,EAAeC,KAAKC,IAAIL,GAASI,KAAKC,IAAIJ,GAE1CK,EAAkBN,EAAQ,EAAIN,EAAYI,QAAQS,KAAOb,EAAYI,QAAQU,MAC7EC,EAAgBR,EAAQ,EAAIP,EAAYI,QAAQY,GAAKhB,EAAYI,QAAQa,KAEzEC,EAAYT,EAAeG,EAAkBG,EAEjD,OAA8C,IAA1CP,EAAkBW,QAAQD,GACrBlB,EAAYI,QAAQgB,QAGtBF,GASLG,EAAO,SAASA,EAAKC,EAAOC,EAAeC,GAC7C,IAAIC,OAAO,EACPC,OAAS,EACTC,OAAW,EACXC,OAAW,EACXC,OAAS,EACTC,OAAe,EACfC,OAAY,EACZC,OAAY,EACZC,OAAY,EACZC,OAAgB,EAChBC,OAAQ,EACRC,OAAQ,EACRC,OAAK,EACLC,OAAkB,EAClBC,OAAe,EACfC,OAAgB,EAChBC,OAAiB,EACjBC,OAA4B,EAC5BC,OAAmB,EACnBC,OAAa,EACbC,OAA0B,EA4U9B,OAzUEpB,EAAO,GACPC,EAASL,EAAKyB,WAAWxB,EAAMyB,aAC/BjB,GAAe,EAAInC,EAASS,WAC5BmC,EAAejB,EAAM0B,kBACrBR,EAAgBD,EAAaU,aAAa,IAAK,IAC/CR,EAAiBF,EAAaU,aAAa,IAAK,IAChDhB,EAAY,GACZC,EAAgB,CACdgB,YAAa,EACbC,YAAa,IAIfT,EAA4B,IACF1C,EAAYI,QAAQS,MAAQ,eACtD6B,EAA0B1C,EAAYI,QAAQU,OAAS,gBACvD4B,EAA0B1C,EAAYI,QAAQY,IAAM,aACpD0B,EAA0B1C,EAAYI,QAAQa,MAAQ,eAEtDuB,EAAcY,sBAAsB,KACpCZ,EAAca,6BAA6B,KAE3CZ,EAAeW,sBAAsB,KACrCX,EAAeY,6BAA6B,KAE5CV,EAAmBjB,EAAOiB,iBAAiBjB,EAAO4B,oBAAqB5B,EAAO6B,qBAE9ElB,EAAK,IAAIzC,EAAWQ,QAAQoD,QAAQjC,EAAe,CACjDkC,YAAa,CAAC,CAAC7D,EAAWQ,QAAQsD,IAAK,CACrCC,UAAW,OAUf7B,EAAa8B,GAAG,YAAY,WAC1BvC,EAAKwC,eAAetC,GAEpBO,EAAagC,QAAQ,YAAa,CAChCC,OAAQxC,IAGVI,EAAW,EACXC,EAAW,EAEXG,GAAY,EAEZ,SAAUiC,IACJjC,IACFF,KAEA,EAAI9B,EAAMK,SAAS4D,IAJvB,MASFlC,EAAa8B,GAAG,WAAW,SAAUK,GACnCtC,EAAWsC,EAAMC,OACjBtC,EAAWqC,EAAME,UAGnBrC,EAAa8B,GAAG,UAAU,SAAUK,GAClClC,GAAY,EAEZ,IAAImB,EAAchB,EAAcgB,YAAce,EAAMC,OAChDf,EAAcjB,EAAciB,YAAcc,EAAME,OAEhDC,EAAa1C,EAAO0C,WAAWlB,EAAaC,EAAa5B,EAAeG,EAAO2C,mBAAmBnB,EAAaC,EAAa5B,IAI5HL,EAAYb,EAAiB6C,EAAaC,EAAazB,EAAOlB,mBAE9D4D,GAAclD,IAAclB,EAAYI,QAAQgB,QAClDK,EAAK6C,SAASpB,EAAaC,EAAajC,GAExCO,EAAK8C,QAAQrB,EAAaC,EAAajC,GAGzCY,EAAagC,QAAQ,UAAW,CAC9BC,OAAQxC,QAMR,EAAItB,EAAWuE,kBACjBjD,EAAckD,iBAAiB,cAAc,WAC3C3C,EAAagC,QAAQ,eAGvBvC,EAAckD,iBAAiB,YAAY,WACrC1C,IAAcC,GAChBF,EAAagC,QAAQ,UAAW,CAC9BC,OAAQxC,OAOd,WACE,IAAImD,OAAW,EAEfnD,EAAckD,iBAAiB,cAAc,WAC3CC,GAAW,KAGbnD,EAAckD,iBAAiB,YAAY,WACzCC,GAAW,KAGbC,EAAOF,iBAAiB,aAAa,SAAUR,GACzCS,GACFT,EAAMW,oBAbZ,KAkBArD,EAAckD,iBAAiB,aAAa,WAC1C5B,EAA0BxB,EAAKwC,eAAetC,IAAkBsB,EAChEf,EAAagC,QAAQ,eAGvBvC,EAAckD,iBAAiB,WAAW,WACpC5B,IACFtB,EAAcsD,QACdhC,GAA0B,GAGxBd,IAAcC,GAChBF,EAAagC,QAAQ,UAAW,CAC9BC,OAAQxC,QAMhBc,EAAGuB,GAAG,YAAY,SAAUK,GAC1BjC,GAAY,EACZF,EAAagC,QAAQ,WAAYG,MAGnC5B,EAAGuB,GAAG,WAAW,SAAUK,GACzBnC,EAAagC,QAAQ,UAAWG,MAGlC5B,EAAGuB,GAAG,UAAU,SAAUK,GACxBjC,GAAY,EACZF,EAAagC,QAAQ,SAAUG,MAGjCzB,EAAcsC,YAAY,CACxBC,eAAgB,WACdjD,EAAagC,QAAQ,aAAc,CACjCC,OAAQxC,KAGZyD,eAAgB,SAAwBC,GACtC,IAAI1F,EAAQ0F,EAAOC,kBACfC,EAActF,EAAUO,QAAQgF,SAASC,gBAAgB9F,EAAO,EAAG,EAAG0C,EAAU3B,MAAO,GACvFgF,EAAczF,EAAUO,QAAQgF,SAASC,gBAAgB9F,EAAO,EAAG,EAAG0C,EAAU1B,MAAO,GAE3F+B,EAAgB6C,EAAaG,MAIjC7C,EAAeqC,YAAY,CACzBC,eAAgB,WACdjD,EAAagC,QAAQ,cAAe,CAClCC,OAAQxC,KAGZyD,eAAgB,SAAwBC,GACtC,IAAI1F,EAAQ0F,EAAOC,kBAEfC,OAAc,EACdG,OAAc,EACdC,OAAkB,EAElBtD,EAAUf,YAAclB,EAAYI,QAAQU,OAASmB,EAAUf,YAAclB,EAAYI,QAAQS,MACnG0E,EAAkBtD,EAAUf,YAAclB,EAAYI,QAAQU,MAAQ,GAAK,EAC3EqE,EAActF,EAAUO,QAAQgF,SAASC,gBAAgB9F,EAAO,EAAG,EAAG0C,EAAU3B,MAAOqC,EAAmB4C,GAC1GD,EAAcrD,EAAU1B,OACf0B,EAAUf,YAAclB,EAAYI,QAAQY,IAAMiB,EAAUf,YAAclB,EAAYI,QAAQa,OACvGsE,EAAkBtD,EAAUf,YAAclB,EAAYI,QAAQa,KAAO,GAAK,EAC1EkE,EAAclD,EAAU3B,MACxBgF,EAAczF,EAAUO,QAAQgF,SAASC,gBAAgB9F,EAAO,EAAG,EAAG0C,EAAU1B,MAAOoC,EAAmB4C,IAG5GjD,EAAgB6C,EAAaG,MASjCzD,EAAS,WACP,GAAIF,IAAaQ,GAASP,IAAaQ,EAAvC,CAIAD,EAAQR,EACRS,EAAQR,EAER,IAAIsB,EAAchB,EAAcgB,YAAcvB,EAC1C2D,EAAcpD,EAAciB,YAAcvB,EAC1C4D,EAAW9D,EAAO8D,SAAStC,EAAaoC,EAAa/D,EAAeG,EAAO+D,aAE/E/D,EAAOgE,UAAUnE,EAAe2B,EAAaoC,EAAaE,GAE1D1D,EAAagC,QAAQ,WAAY,CAC/B6B,OAAQzC,EACRa,OAAQxC,EACRqE,eAAgBvF,EAAiB6C,EAAaoC,EAAa5D,EAAOlB,mBAClE6D,mBAAoB3C,EAAO2C,mBAAmBnB,EAAaoC,EAAa/D,OAW5Ee,EAAkB,SAAyBY,EAAaC,GACtD,IAAIqC,EAAW9D,EAAO8D,SAAStC,EAAaC,EAAa5B,EAAeG,EAAO+D,aAE/EvD,EAAcgB,YAAcA,GAAe,EAC3ChB,EAAciB,YAAcA,GAAe,EAE3CzB,EAAOgE,UAAUnE,EAAe2B,EAAaC,EAAaqC,IAU5D5C,EAAa,SAAoBiD,EAAOvF,EAAOC,EAAOW,GAOpD,GANAe,EAAU3B,MAAQA,EAClB2B,EAAU1B,MAAQA,EAGlB0B,EAAUf,UAAYA,GAAab,EAAiBC,EAAOC,EAAOmB,EAAOlB,mBAErEqF,IAAUxE,EAAKyE,SACjBzE,EAAKwC,eAAetC,GACpBiB,EAAcuD,gBAAgB,GAAGC,YAAYC,YAAY,GAEzDnE,EAAagC,QAAQ,UAAW,CAC9BC,OAAQxC,EACRqE,eAAgB3D,EAAUf,gBAEvB,IAAI2E,IAAUxE,EAAK6E,UAexB,MAAM,IAAIC,MAAM,wBAdhB9E,EAAKwC,eAAetC,GACpBkB,EAAesD,gBAAgB,GAAGC,YAAYI,YAAY,KAAKH,YAAY,GAE3EnE,EAAagC,QAAQ,WAAY,CAC/BC,OAAQxC,EACRqE,eAAgB3D,EAAUf,YAI5BY,EAAagC,QAAQpB,EAA0BT,EAAUf,WAAY,CACnE6C,OAAQxC,EACRqE,eAAgB3D,EAAUf,cAalCO,EAAKmC,GAAK9B,EAAa8B,GACvBnC,EAAKqC,QAAUhC,EAAagC,QAU5BrC,EAAK8C,QAAU,SAAUrB,EAAaC,EAAajC,GACjD0B,EAAWvB,EAAKyE,SAAU5C,EAAaC,EAAajC,IAWtDO,EAAK6C,SAAW,SAAUpB,EAAaC,EAAajC,GAClD0B,EAAWvB,EAAK6E,UAAWhD,EAAaC,EAAajC,IASvDO,EAAK4E,QAAU,WACbhE,EAAGgE,UACH7D,EAAc6D,UACd5D,EAAe4D,UAEf/E,EAAMgF,YAAY7E,IAGbA,GASTJ,EAAKyB,WAAa,WAChB,IAAIpB,EAAS6E,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAE7EG,EAAgB,CAClBlG,kBAAmB,CAACR,EAAYI,QAAQU,MAAOd,EAAYI,QAAQS,KAAMb,EAAYI,QAAQY,IAC7FoD,WAAY/C,EAAK+C,WACjBqB,YAAa,GACblC,oBAAqB,IACrBD,oBAAqB,IACrBkC,SAAUnE,EAAKmE,SACfnB,mBAAoBhD,EAAKgD,mBACzB1B,iBAAkBtB,EAAKsB,iBACvB+C,UAAWrE,EAAKqE,WAGlB,OAAOlG,EAASY,QAAQuG,OAAO,GAAID,EAAehF,IAcpDL,EAAKqE,UAAY,SAAUkB,EAAS1D,EAAaC,EAAaqC,GAC5DoB,EAAQC,OAAM,EAAI/G,EAAeM,SAAS,cAAgB,kCAAoC8C,EAAc,OAASC,EAAc,cAAgBqC,EAAW,QAehKnE,EAAKwC,eAAiB,SAAU+C,GAC9B,IAAIE,EAAaF,EAAQE,WACrBC,GAAW,EAAI9G,EAAW+G,iBAAiBF,GAE3CG,EADcF,EAAS5F,QAAQyF,GACN,IAAMG,EAASP,OAO5C,OALIS,IACFH,EAAWI,YAAYN,GACvBE,EAAWK,YAAYP,IAGlBK,GAaT5F,EAAK+F,gBAAkB,SAAUR,GAC/B,IAAIE,EAAaF,EAAQE,WAEzBA,EAAWI,YAAYN,GACvBE,EAAWO,aAAaT,EAASE,EAAWQ,aAa9CjG,EAAKgD,mBAAqB,SAAUkD,EAASC,EAASZ,GACpD,IAAIa,EAAc/G,KAAKgH,IAAIhH,KAAKC,IAAI4G,GAAWX,EAAQe,YAAa,GAChEC,EAAclH,KAAKgH,IAAIhH,KAAKC,IAAI6G,GAAWZ,EAAQiB,aAAc,GAErE,OAAOnH,KAAKoH,IAAIL,EAAaG,IAc/BvG,EAAK+C,WAAa,SAAUmD,EAASC,EAASZ,EAASvC,GACrD,OAA8B,IAAvBA,GAUThD,EAAKsB,iBAAmB,SAAU+E,EAAKI,GACrC,OAAOtI,EAASY,QAAQ2H,OAAOL,EAAKI,IAYtCzG,EAAKmE,SAAW,SAAUtC,EAAaC,EAAayD,EAASnB,GAK3D,OAJuB/E,KAAKgH,IAAIhH,KAAKoH,IAAI5E,EAAc0D,EAAQe,aAAc,GAAI,KAC3DxE,EAAc,EAAI,GAAK,GAAKzC,KAAKgH,IAAIhH,KAAKC,IAAIwC,GAAe,IAAK,IACrCsC,GAKrDpE,EAAKyE,SAAW,KAChBzE,EAAK6E,UAAY,MAEjB5G,EAAQc,QAAUiB,EAClB2G,EAAO1I,QAAUA,EAAO,U,iDCrjBxBF,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAET,IAAI0I,EAAY,CACdhH,KAAMiH,OAAO,QACb9G,QAAS8G,OAAO,WAChBrH,KAAMqH,OAAO,QACbpH,MAAOoH,OAAO,SACdlH,GAAIkH,OAAO,OAGb5I,EAAQc,QAAU6H,EAClBD,EAAO1I,QAAUA,EAAO,S,kKCVpB6I,G,MAAQzI,EAAQ,KAChB0I,EAAU1I,EAAQ,IAEhBuI,EAAYE,EAAMF,UAElB5G,E,YAIJ,WAAYgH,GAAQ,IAAD,sBACjB,4CAAMA,IADW,MAIGC,OAAOD,EAAM9I,OAAOgJ,MAAM,KAJ7B,mBAIZC,EAJY,KAINC,EAJM,KAKjBD,EAAOA,EAAKD,MAAM,IAClB,IAAK,IAAIG,EAAI,EAAGA,EAAIhI,KAAKiI,KAAKH,EAAKhC,OAAS,GAAK,EAAGkC,IAClDF,EAAKI,OAAOJ,EAAKhC,QAAUkC,EAAW,GAALA,EAAE,IAAQ,EAAG,KAGhD,IAAIG,EAAS,CADbL,EAAOA,EAAKM,KAAK,KACGC,OAAO,CAACN,IAAQO,QAAO,SAACC,GAAD,OAAOA,KAAGH,KAAK,KAVzC,OAYjB,EAAKI,MAAQ,CACXL,OAAQA,EACRM,OAAQf,EAAQgB,YAAYf,EAAM9I,MAAO,KACzC8J,MAAOjB,EAAQgB,YAAYf,EAAM9I,MAAO,KACxC+J,SAAUlB,EAAQgB,YAAYf,EAAM9I,MAAO,KAC3CgK,SAAS,GAjBM,E,yEAqBPN,GACVO,KAAKC,SAAS,CAACF,SAAUC,KAAKN,MAAMK,Y,8BAIpC,OAAO,yBAAKG,UAAU,SACpB,kBAAC,UAAD,KACE,0BAAMA,UAAU,UAAUF,KAAKN,MAAML,Y,6BAMzC,OAAO,yBAAKa,UAAU,QACpB,kBAAC,UAAD,KACE,0BAAMA,UAAU,UAAUF,KAAKN,MAAML,QACrC,6BACCW,KAAKnB,MAAMsB,SAASC,YACnB,0BAAMF,UAAU,UAAUF,KAAKN,MAAMC,QAEtCK,KAAKnB,MAAMsB,SAASC,YAAc,6BAClCJ,KAAKnB,MAAMsB,SAASE,cACnB,0BAAMH,UAAU,YAAYF,KAAKN,MAAMI,UAExCE,KAAKnB,MAAMsB,SAASE,cAAgB,6BACpCL,KAAKnB,MAAMsB,SAASG,WACnB,0BAAMJ,UAAU,SAASF,KAAKN,MAAMG,W,6BAMrChB,GAAQ,IAAD,OACZ,OAAO,yBACLqB,UAAU,OACVK,QAAS,SAACd,GAAD,OAAO,EAAKe,YAAYf,KAEhCO,KAAKN,MAAMK,QAAUC,KAAKS,QAAUT,KAAKU,Y,GA9D7BC,aAoEbC,E,WAEJ,WAAY/B,GAAQ,oBAClBA,EAAQA,GAAS,GACjBmB,KAAKN,MAAQ,CACXxB,IAAKW,EAAMX,KAAO,EAClBI,IAAKO,EAAMP,KAAO,Q,iDAIjBJ,EAAKI,GACR,OAAOpH,KAAK2J,MACR3J,KAAKqH,UAAYD,EAAMJ,EAAM,GAAKA,K,2BAInCW,GAEH,IAAMiC,GAASjC,GAAO,IAAIiC,MAC1B,GAAc,IAAVA,EAEF,OAAOd,KAAKe,KAAK,EAAG,IACf,GAAc,IAAVD,EAET,OAAOd,KAAKe,KAAK,EAAG,KACf,GAAc,IAAVD,EAAa,CAEtB,IAAME,EAAKpC,EAAQqC,YACbC,EAAOtL,OAAOsL,KAAKF,GAAIG,MAAM,GAAG,GAEtC,OAAOD,EADKE,SAASlK,KAAKqH,SAAW2C,EAAKlE,SAErC,OAAc,IAAV8D,EAEFd,KAAKe,KAAK,GAAI,UAFhB,M,KAOLM,E,YAwBJ,WAAYxC,GAAQ,IAAD,sBACjB,4CAAMA,IAGN,IAAI/G,EAAQ6G,EAAM2C,MAAMzC,EAAM0C,GAAI1C,EAAM3G,QAAU,IAJjC,OAOjBmJ,EAAWG,OAAOC,SAAQ,SAAAC,GACpB,EAAK7C,MAAM6C,IACb5J,EAAMsC,GAAGsH,EAAW,EAAK7C,MAAM6C,OAInC,EAAKhC,MAAQ,CACX5H,MAAOA,GAdQ,E,iFAkBE,IAEXA,EAAUkI,KAAKN,MAAf5H,MAGRA,EAAM6J,SAaN3B,KAAKC,SAAS,CACZnI,UAIEkI,KAAKnB,MAAM+C,UACb5B,KAAKnB,MAAM+C,SAAS9J,K,yCAIL+J,GAEjB7B,KAAKN,MAAM5H,MAAM6J,W,+BAGV,IAGCG,EAAa9B,KAAKnB,MAAlBiD,SAMR,OACE,yBAAKP,GAAIvB,KAAKnB,MAAM0C,GAAIrB,UAAWF,KAAKnB,MAAMqB,WAC3C6B,IAAMC,SACAC,IAAIH,GAAU,SAACI,EAAOC,GACrB,IAAMC,EAAaxM,OAChBsL,KAAKgB,EAAMrD,OACXW,QAAQ,SAAA6C,GAAC,OAAsC,IAAlChB,EAAWG,OAAO7J,QAAQ0K,MACvCC,QAAQ,SAACC,EAAGF,GAA8B,OAAvBE,EAAEF,GAAKH,EAAMrD,MAAMwD,GAAWE,IAAI,IACtD,OAAOR,IAAMS,cAAcN,EAAMO,KAAML,W,GA5FhCzB,aAAnBU,EAYGG,OAAS,CACd,WACA,cACA,eACA,gBACA,UACA,aACA,YACA,WACA,W,IA+EEkB,E,YAEJ,WAAY7D,GAAQ,IAAD,8BACjB,4CAAMA,KACD8D,IAAMZ,IAAMa,YAFA,E,sEAKT,IAAD,OACP,OAAO,yBAAKD,IAAK3C,KAAK2C,KACnB,CAAC,SAAU,WAAY,SAASV,KAAI,SAACxC,EAAGP,GAAJ,OACjC,yBAAK2D,IAAK,cAAc/D,OAAOI,IAC/B,2BAAO4D,QAAS,OAAOrD,GAAIA,GACzB,2BAAOgD,KAAK,WAAWM,KAAM,OAAOtD,EAAG8B,GAAI,OAAO9B,EAChDuD,eAAgB,EAAKnE,MAAMsB,SAAS,OAAOV,GAC3CwD,SAAU,EAAKpE,MAAMqE,wBANxB,QAWFC,MAAM,GAAGC,KAAK,GAAGnB,KAAI,SAACoB,EAAGnE,GAAJ,OACpB,yBAAK2D,IAAK,eAAe3D,GACvB,2BAAO4D,QAAS,QAAU5D,GAAI,QAAUA,GACxC,2BACEuD,KAAK,QAAQM,KAAK,QAClBxB,GAAI,QAAUrC,EAAGnJ,MAAOmJ,EACxB8D,eAAgB9D,IAAM,EAAKL,MAAMsB,SAASW,MAC1CmC,SAAU,EAAKpE,MAAMqE,6B,GA1BZvC,aAmCjB2C,E,YAEJ,WAAYzE,EAAO0E,GAAU,IAAD,sBAC1B,4CAAM1E,EAAO0E,IAEb,IAAIC,EAAY,IAAI5C,EAHM,OAK1B,EAAKlB,MAAQ,CACX+D,WAAY,EACZC,UAAW,GACX5L,MAAO,KACP0L,UAAWA,EACXrD,SAAU,CAACW,MAAO,EAAGV,YAAY,IAMnC,EAAKuD,UACL,EAAKA,UAjBqB,E,uEA6B1B,OALA3D,KAAKN,MAAM+D,YAAc,EACzBzD,KAAKN,MAAMgE,UAAUE,QAAQ,CAC3Bf,IAAK7C,KAAKN,MAAM+D,WAChBpE,OAAQW,KAAKN,MAAM8D,UAAUK,KAAK7D,KAAKN,MAAMS,YAExC,CAACuD,UAAW1D,KAAKN,MAAMgE,UACtBD,WAAYzD,KAAKN,MAAM+D,c,qCAGlBhE,GAEb,IAAMqE,EAAI1C,SAAS3B,EAAElF,OAAOuH,SAAS,GAAGA,SAAS,GAAGiC,YAAa,IAG3DC,EAAMhE,KAAKN,MAAMgE,UAAU/L,QAAQmM,GACrCJ,EAAY1D,KAAKN,MAAMgE,UAAUvC,QACrCuC,EAAUtE,OAAO4E,EAAK,GAGtBhE,KAAKN,MAAMgE,UAAYA,EAIvB,IAAIO,EAAYjE,KAAK2D,UACrB3D,KAAKC,SAASgE,K,gDAGUxJ,GACxB,IAAMF,EAASE,EAAMF,OACjBxE,EAAwB,aAAhBwE,EAAOkI,KACjBlI,EAAO2J,QAAU3J,EAAOxE,MACpBgN,EAAOxI,EAAOwI,KAChB5C,EAAWH,KAAKN,MAAMS,SACb,UAAT4C,IACFhN,EAAQqL,SAASrL,IAEnBoK,EAAS4C,GAAQhN,EACjBiK,KAAKC,SAAS,CACZE,SAAUA,M,+BAIJ,IAAD,OAGP,OACE,6BACE,yBAAKoB,GAAG,YACN,kBAACF,EAAD,CACEnJ,OAAQ,CAAClB,kBAAmB,CAC1ByH,EAAUnH,MACVmH,EAAUpH,OACZkK,GAAG,YACHrB,UAAU,QACV0B,SAAU,SAAA9J,GAAK,OAAI,EAAKmI,SAAS,CAAEnI,WACnC6K,IAAI,UACJwB,YAAa,SAAA1E,GAAC,OAAI,EAAK2E,eAAe3E,KAErCO,KAAKN,MAAMgE,UAAUzB,KAAI,SAACxC,GAAD,OACxB,kBAAC5H,EAAD,CAAMqI,UAAU,OAAOnK,MAAO0J,EAAEJ,OAC1BwD,IAAKpD,EAAEoD,IACP1C,SAAU,EAAKT,MAAMS,gBAIjC,kBAACuC,EAAD,CAAUvC,SAAUH,KAAKN,MAAMS,SAC7B+C,kBACA,SAACzD,GAAD,OAAO,EAAK4E,0BAA0B5E,W,GA7F9BkB,aAmGlB2D,IAASC,OACP,kBAACjB,EAAD,MACAkB,SAASC,eAAe,U,qDC7V1B7O,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQwL,MAAQxL,EAAQ2I,UAAY3I,EAAQ+B,UAAOoF,EAEnD,IAEIyH,EAASzO,EAFDC,EAAQ,KAMhBM,EAAcP,EAFDC,EAAQ,KAMrByO,EAAU1O,EAFDC,EAAQ,KAIrB,SAASD,EAAuBS,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAEvFZ,EAAQ+B,KAAO6M,EAAO9N,QACtBd,EAAQ2I,UAAYjI,EAAYI,QAChCd,EAAQwL,MAAQqD,EAAQ/N,S,gCCrBxBhB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQkF,cAAgBlF,EAAQ0H,qBAAkBP,EAElD,IAIgCvG,EAJ5BkO,EAAU1O,EAAQ,GAElBF,GAE4BU,EAFMkO,IAEelO,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAuBvFZ,EAAQ0H,gBAdc,SAAyBJ,GAC7C,OAAOpH,EAASY,QAAQ4I,OAAOpC,EAAQyH,WAAY,CACjDC,SAAU,KAadhP,EAAQkF,cALY,WAClB,MAAO,iBAAkB+J,QAAUC,UAAUC,mB,gCC7B/CrP,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAEIC,EAAWC,EAFDC,EAAQ,IAMlBC,EAAWF,EAFDC,EAAQ,KAMlBG,EAAYJ,EAFDC,EAAQ,KAMnBwO,EAASzO,EAFDC,EAAQ,KAIpB,SAASD,EAAuBS,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAsJvFZ,EAAQc,QA/II,SAAe2K,EAAIrJ,GAC7B,IAAII,OAAe,EACf6J,OAAQ,EACRpJ,OAAe,EACfjB,OAAQ,EACRoN,OAAU,EAuId,OApIEpN,EAAQ,GACRiB,EAAe,IAAI1C,EAAUO,QAAQuO,aACrC7M,GAAe,EAAInC,EAASS,WAC5BuL,EAAQ,GACR+C,EAAU3D,EAUZzJ,EAAMyB,UAAY,WAChB,OAAOrB,GAUTJ,EAAMsN,SAAW,WACf,OAAOjD,GAQTrK,EAAM0B,gBAAkB,WACtB,OAAOT,GAUTjB,EAAMsC,GAAK,SAAUsH,EAAW2D,GAC9B/M,EAAa8B,GAAGsH,EAAW2D,IAU7BvN,EAAMwN,WAAa,SAAUlI,EAASpF,GACpC,IAAIC,GAAO,EAAIyM,EAAO9N,SAASkB,EAAOsF,EAASpF,GAe/C,MAda,CAAC,WAAY,cAAe,eAAgB,gBAAiB,aAAc,eAAgB,UAAW,aAAc,YAAa,WAAY,WAGnJyJ,SAAQ,SAAUC,GACvBzJ,EAAKmC,GAAGsH,GAAW,SAAU6D,GAC3BjN,EAAagC,QAAQoH,EAAW6D,SAIpCpD,EAAMqD,KAAK,CACTvN,KAAMA,EACNmF,QAASA,IAGJnF,GASTH,EAAM2N,QAAU,SAAUrI,GACxB,IAAIsI,EAAQ1P,EAASY,QAAQ+O,KAAKxD,EAAO,CACvC/E,QAASA,IAGX,OAAIsI,EACKA,EAAMzN,KAGR,MASTH,EAAMgF,YAAc,SAAU7E,GAG5B,OAFAK,EAAagC,QAAQ,cAAerC,GAE7BjC,EAASY,QAAQgP,OAAOzD,EAAO,CACpClK,KAAMA,KAYVH,EAAM6J,OAAS,WAAa,IAAD,OACrBkE,EAAQrB,SAASC,eAAeS,GAASpD,SAE7CqB,MAAM2C,UAAU3E,MAAM4E,KAAKF,GACrBpE,SAAS,SAAAuE,GACJ,EAAKP,QAAQO,IAChB,EAAKV,WAAWU,MAIxB7D,EAAMV,SAAS,SAAAwE,GACPA,EAAE7I,QAAQE,YACd,EAAKR,YAAYmJ,EAAEhO,UAKlBH,GAIT0G,EAAO1I,QAAUA,EAAO,S,iBC3KxB,IAAImL,EAAc,CAAC,IAAK,MAAO,EAAK,OAAQ,EAAK,OAAQ,EAAK,KAAM,EAAK,MAAO,EAAK,MAAO,EAAK,KAAM,EAAK,OAAQ,EAAK,OAAQ,EAAK,QAAS,EAAK,OAAQ,GAAM,MAAO,IAAO,QAAS,IAAQ,MAAO,IAAS,MAAO,IAAa,MAAO,IAAO,WAAY,IAAO,WAAY,IAAO,WAAY,IAAQ,SAAU,IAAQ,UAC3TiF,EAAa,CAAC,IAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,GAAM,SAAK,IAAO,SAAK,IAAQ,SAAK,IAAS,SAAK,IAAa,SAAK,IAAO,eAAM,IAAO,eAAM,IAAO,eAAM,IAAQ,eAAM,IAAQ,gBAC7PC,EAAgB,CAAC,IAAK,eAAM,EAAK,eAAM,EAAK,eAAM,EAAK,SAAK,EAAK,eAAM,EAAK,eAAM,EAAK,SAAK,EAAK,eAAM,EAAK,eAAM,EAAK,eAAM,EAAK,qBAAO,GAAM,qBAAO,IAAO,qBAAO,IAAQ,eAAM,IAAS,eAAM,IAAa,eAAM,IAAO,iCAAS,IAAO,iCAAS,IAAO,iCAAS,IAAQ,2BAAQ,IAAQ,4BAC5RC,EAAW,CAAC,EAAKF,EAAY,EAAKC,EAAe,EAAKlF,GAEtDoF,EAAU,SAAUC,EAAaC,GACpC,OAAOA,EAAeD,IAGnBE,EAAU,SAAUF,EAAaC,GACpC,GAAuB,MAAnBD,EAAY,GACf,OAAOD,EAAQC,EAAY,GAAIC,GAEhC,GAAoB,OAAhBD,EACH,OAAOC,EAAe,IAEvB,GAAuB,MAAnBD,EAAY,GACf,OAAQC,EAAe,IAAQ,IAAOF,EAAQC,EAAY,GAAIC,GACxD,GAAuB,MAAnBD,EAAY,GACtB,OAAQD,EAAQC,EAAY,GAAIC,GAAkB,IAAOA,EAAe,IAEzE,IAAIE,EAAW,GAIf,OAHAH,EAAYvH,MAAM,IAAI0C,SACf,SAAAiF,GAAC,OAAID,EAASjB,KAAKe,EAAeG,OACzCD,EAASrH,OAAO,EAAG,EAAGmH,EAAe,KAC9BE,EAASnH,KAAK,MAGlBqH,EAAY,SAAUL,EAAaC,GACtC,IAAIE,EAAW,GA0Bf,MAzBuB,MAAnBH,EAAY,GACfG,EAASjB,KAAKe,EAAe,MAEF,MAAnBD,EAAY,GACpBG,EAASjB,KAAKe,EAAe,MAEF,MAAnBD,EAAY,GACpBG,EAASjB,KAAKe,EAAe,MAEF,MAAnBD,EAAY,GACpBG,EAASjB,KAAKe,EAAe,OAG7BE,EAASjB,KAAKe,EAAeD,EAAY,KACzCG,EAASjB,KAAKe,EAAe,OAED,OAAzBD,EAAYnF,MAAM,IAAsC,IAAvBmF,EAAYtJ,SAGrB,MAAnBsJ,EAAY,GACpBG,EAASjB,KAAKe,EAAeD,EAAY,KAGzCG,EAASjB,KAAKgB,EAAQF,EAAYnF,MAAM,GAAIoF,KAEtCE,EAASnH,KAAK,MAGlBsH,EAAW,SAAUN,EAAaC,GACrC,IAAIE,EAAW,GACf,GAAoB,SAAhBH,EACH,MAAO,GAER,KAA0B,MAAnBA,EAAY,IAClBA,EAAcA,EAAYnF,MAAM,GAEjC,OAA2B,IAAvBmF,EAAYtJ,OACRqJ,EAAQC,EAAaC,GAEG,IAAvBD,EAAYtJ,OACbwJ,EAAQF,EAAaC,GAEG,IAAvBD,EAAYtJ,OACb2J,EAAUL,EAAaC,IAGP,MAAnBD,EAAY,GACfG,EAASjB,KAAKe,EAAe,MAEF,MAAnBD,EAAY,GACpBG,EAASjB,KAAKe,EAAe,MAEF,MAAnBD,EAAY,GACpBG,EAASjB,KAAKe,EAAe,OAG7BE,EAASjB,KAAKe,EAAeD,EAAY,KACzCG,EAASjB,KAAKe,EAAe,OAED,QAAzBD,EAAYnF,MAAM,IAAuC,IAAvBmF,EAAYtJ,SAGtB,MAAnBsJ,EAAY,GACpBG,EAASjB,KAAKgB,EAAQF,EAAYnF,MAAM,GAAIoF,IAG5CE,EAASjB,KAAKmB,EAAUL,EAAYnF,MAAM,GAAIoF,KAExCE,EAASnH,KAAK,OAqCnBV,EAAU,SAAU0H,EAAaC,GAEpC,OAA2B,IAAvBD,EAAYtJ,OACRqJ,EAAQC,EAAaC,GAEG,IAAvBD,EAAYtJ,OACbwJ,EAAQF,EAAaC,GAEG,IAAvBD,EAAYtJ,OACb2J,EAAUL,EAAaC,GAEC,IAAvBD,EAAYtJ,OACb4J,EAASN,EAAaC,GA7CnB,SAAUD,EAAaC,GAClC,IAAIE,EAAW,GACf,GAAwC,IAApCH,EAAYnF,MAAM,GAAI,GAAGnE,OAC5ByJ,EAASjB,KAAKe,EAAeD,EAAYnF,MAAM,GAAI,KACnDsF,EAASjB,KAAKe,EAAe,WAEzB,GAAwC,IAApCD,EAAYnF,MAAM,GAAI,GAAGnE,OACjCyJ,EAASjB,KAAKgB,EAAQF,EAAYnF,MAAM,EAAG,GAAIoF,IAC/CE,EAASjB,KAAKe,EAAe,WAEzB,GAAwC,IAApCD,EAAYnF,MAAM,GAAI,GAAGnE,OACjCyJ,EAASjB,KAAKmB,EAAUL,EAAYnF,MAAM,EAAG,GAAIoF,IACjDE,EAASjB,KAAKe,EAAe,WAEzB,GAAwC,IAApCD,EAAYnF,MAAM,GAAI,GAAGnE,OACjCyJ,EAASjB,KAAKoB,EAASN,EAAYnF,MAAM,EAAG,GAAIoF,IAChDE,EAASjB,KAAKe,EAAe,UAEzB,IAAwC,IAApCD,EAAYnF,MAAM,GAAI,GAAGnE,OASjC,MAAO,qDARPyJ,EAASjB,KAAKe,EAAeD,EAAY,KACzCG,EAASjB,KAAKe,EAAe,MAC7BE,EAASjB,KAAKoB,EAASN,EAAYnF,MAAM,EAAG,GAAIoF,IAChB,SAA5BD,EAAYnF,MAAM,EAAG,IACxBsF,EAASjB,KAAKe,EAAe,MAO/B,OADAE,EAASjB,KAAKoB,EAASN,EAAYnF,OAAO,GAAIoF,IACvCE,EAASnH,KAAK,KAkBbuH,CAAMP,EAAaC,IA8C5B/H,EAAO1I,QAAU,CAChB8J,YAxBiB,SAAU0G,EAAaQ,GAExC,IAAIC,EAAS,KAkBb,OATCA,GAHDT,GADAA,GAHAA,GADAA,EAAcxH,OAAOwH,IACKU,QAAQ,IAAK,KAGbA,QAAQ,MAAO,KAAKA,QAAQ,WAAY,KACxCA,QAAQ,YAAa,OAE/BrP,QAAQ,MAAQ,EA7Bf,SAAUsP,EAAKH,GAChC,IAAMI,EAA4B,MAAhBJ,EAAsB,IAAM,SAE1CK,EAAY,GACZC,EAAW,GAUf,OATAD,GAHAF,EAAMA,EAAIlI,MAAM,MAGA,GAAGA,MAAM,IAAI0C,SAC5B,SAAAiF,GAAC,OAAIL,EAAQK,EAAGN,EAASU,OAAexH,KAAK,KAC9C8H,EAAWxI,EAAQqI,EAAI,GAAIH,GAEO,MAA9BG,EAAI,GAAGA,EAAI,GAAGjK,OAAS,IACO,MAA9BiK,EAAI,GAAGA,EAAI,GAAGjK,OAAS,KAE1BoK,EAAWA,EAASjG,MAAM,GAAI,GAAK+F,GAE7B,CAACE,EACNhB,EAASU,GAAa,KACtBK,GAAW7H,KAAK,KAcR+H,CAAYf,EAAaQ,GAEzBlI,EAAQ0H,EAAaF,EAASU,IAGpB,MAAhBA,IAEHC,EAASA,EAAOC,QAAQ,IAAK,KAEvBD,GAKP9F,YAAaA,EACbiF,WAAYA,EACZC,cAAeA,K","file":"static/js/main.da6d6283.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _sister = require('sister');\n\nvar _sister2 = _interopRequireDefault(_sister);\n\nvar _hammerjs = require('hammerjs');\n\nvar _hammerjs2 = _interopRequireDefault(_hammerjs);\n\nvar _rebound = require('rebound');\n\nvar _rebound2 = _interopRequireDefault(_rebound);\n\nvar _vendorPrefix = require('vendor-prefix');\n\nvar _vendorPrefix2 = _interopRequireDefault(_vendorPrefix);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _Direction = require('./Direction');\n\nvar _Direction2 = _interopRequireDefault(_Direction);\n\nvar _utilities = require('./utilities');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {number} fromX\n * @param {number} fromY\n * @param {Direction[]} allowedDirections\n * @returns {Direction[]} computed direction\n */\nvar computeDirection = function computeDirection(fromX, fromY, allowedDirections) {\n  var isHorizontal = Math.abs(fromX) > Math.abs(fromY);\n\n  var isLeftDirection = fromX < 0 ? _Direction2.default.LEFT : _Direction2.default.RIGHT;\n  var isUpDirection = fromY < 0 ? _Direction2.default.UP : _Direction2.default.DOWN;\n\n  var direction = isHorizontal ? isLeftDirection : isUpDirection;\n\n  if (allowedDirections.indexOf(direction) === -1) {\n    return _Direction2.default.INVALID;\n  }\n\n  return direction;\n};\n\n/**\n * @param {Stack} stack\n * @param {HTMLElement} targetElement\n * @param {boolean} prepend\n * @returns {Object} An instance of Card.\n */\nvar Card = function Card(stack, targetElement, prepend) {\n  var card = void 0;\n  var config = void 0;\n  var currentX = void 0;\n  var currentY = void 0;\n  var doMove = void 0;\n  var eventEmitter = void 0;\n  var isDraging = void 0;\n  var isPanning = void 0;\n  var lastThrow = void 0;\n  var lastTranslate = void 0;\n  var lastX = void 0;\n  var lastY = void 0;\n  var mc = void 0;\n  var _onSpringUpdate = void 0;\n  var springSystem = void 0;\n  var springThrowIn = void 0;\n  var springThrowOut = void 0;\n  var throwDirectionToEventName = void 0;\n  var throwOutDistance = void 0;\n  var throwWhere = void 0;\n  var appendedDuringMouseDown = void 0;\n\n  var construct = function construct() {\n    card = {};\n    config = Card.makeConfig(stack.getConfig());\n    eventEmitter = (0, _sister2.default)();\n    springSystem = stack.getSpringSystem();\n    springThrowIn = springSystem.createSpring(250, 10);\n    springThrowOut = springSystem.createSpring(500, 20);\n    lastThrow = {};\n    lastTranslate = {\n      coordinateX: 0,\n      coordinateY: 0\n    };\n\n    /* Mapping directions to event names */\n    throwDirectionToEventName = {};\n    throwDirectionToEventName[_Direction2.default.LEFT] = 'throwoutleft';\n    throwDirectionToEventName[_Direction2.default.RIGHT] = 'throwoutright';\n    throwDirectionToEventName[_Direction2.default.UP] = 'throwoutup';\n    throwDirectionToEventName[_Direction2.default.DOWN] = 'throwoutdown';\n\n    springThrowIn.setRestSpeedThreshold(0.05);\n    springThrowIn.setRestDisplacementThreshold(0.05);\n\n    springThrowOut.setRestSpeedThreshold(0.05);\n    springThrowOut.setRestDisplacementThreshold(0.05);\n\n    throwOutDistance = config.throwOutDistance(config.minThrowOutDistance, config.maxThrowOutDistance);\n\n    mc = new _hammerjs2.default.Manager(targetElement, {\n      recognizers: [[_hammerjs2.default.Pan, {\n        threshold: 2\n      }]]\n    });\n\n    /*if (prepend) {\n      Card.prependToParent(targetElement);\n    } else {\n      Card.appendToParent(targetElement);\n    }*/\n\n    eventEmitter.on('panstart', function () {\n      Card.appendToParent(targetElement);\n\n      eventEmitter.trigger('dragstart', {\n        target: targetElement\n      });\n\n      currentX = 0;\n      currentY = 0;\n\n      isDraging = true;\n\n      (function animation() {\n        if (isDraging) {\n          doMove();\n\n          (0, _raf2.default)(animation);\n        }\n      })();\n    });\n\n    eventEmitter.on('panmove', function (event) {\n      currentX = event.deltaX;\n      currentY = event.deltaY;\n    });\n\n    eventEmitter.on('panend', function (event) {\n      isDraging = false;\n\n      var coordinateX = lastTranslate.coordinateX + event.deltaX;\n      var coordinateY = lastTranslate.coordinateY + event.deltaY;\n\n      var isThrowOut = config.isThrowOut(coordinateX, coordinateY, targetElement, config.throwOutConfidence(coordinateX, coordinateY, targetElement));\n\n      // Not really sure about computing direction here and filtering on directions here.\n      // It adds more logic. Any suggestion will be appreciated.\n      var direction = computeDirection(coordinateX, coordinateY, config.allowedDirections);\n\n      if (isThrowOut && direction !== _Direction2.default.INVALID) {\n        card.throwOut(coordinateX, coordinateY, direction);\n      } else {\n        card.throwIn(coordinateX, coordinateY, direction);\n      }\n\n      eventEmitter.trigger('dragend', {\n        target: targetElement\n      });\n    });\n\n    // \"mousedown\" event fires late on touch enabled devices, thus listening\n    // to the touchstart event for touch enabled devices and mousedown otherwise.\n    if ((0, _utilities.isTouchDevice)()) {\n      targetElement.addEventListener('touchstart', function () {\n        eventEmitter.trigger('panstart');\n      });\n\n      targetElement.addEventListener('touchend', function () {\n        if (isDraging && !isPanning) {\n          eventEmitter.trigger('dragend', {\n            target: targetElement\n          });\n        }\n      });\n\n      // Disable scrolling while dragging the element on the touch enabled devices.\n      // @see http://stackoverflow.com/a/12090055/368691\n      (function () {\n        var dragging = void 0;\n\n        targetElement.addEventListener('touchstart', function () {\n          dragging = true;\n        });\n\n        targetElement.addEventListener('touchend', function () {\n          dragging = false;\n        });\n\n        global.addEventListener('touchmove', function (event) {\n          if (dragging) {\n            event.preventDefault();\n          }\n        });\n      })();\n    } else {\n      targetElement.addEventListener('mousedown', function () {\n        appendedDuringMouseDown = Card.appendToParent(targetElement) || appendedDuringMouseDown;\n        eventEmitter.trigger('panstart');\n      });\n\n      targetElement.addEventListener('mouseup', function () {\n        if (appendedDuringMouseDown) {\n          targetElement.click();\n          appendedDuringMouseDown = false;\n        }\n\n        if (isDraging && !isPanning) {\n          eventEmitter.trigger('dragend', {\n            target: targetElement\n          });\n        }\n      });\n    }\n\n    mc.on('panstart', function (event) {\n      isPanning = true;\n      eventEmitter.trigger('panstart', event);\n    });\n\n    mc.on('panmove', function (event) {\n      eventEmitter.trigger('panmove', event);\n    });\n\n    mc.on('panend', function (event) {\n      isPanning = false;\n      eventEmitter.trigger('panend', event);\n    });\n\n    springThrowIn.addListener({\n      onSpringAtRest: function onSpringAtRest() {\n        eventEmitter.trigger('throwinend', {\n          target: targetElement\n        });\n      },\n      onSpringUpdate: function onSpringUpdate(spring) {\n        var value = spring.getCurrentValue();\n        var coordianteX = _rebound2.default.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromX, 0);\n        var coordianteY = _rebound2.default.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromY, 0);\n\n        _onSpringUpdate(coordianteX, coordianteY);\n      }\n    });\n\n    springThrowOut.addListener({\n      onSpringAtRest: function onSpringAtRest() {\n        eventEmitter.trigger('throwoutend', {\n          target: targetElement\n        });\n      },\n      onSpringUpdate: function onSpringUpdate(spring) {\n        var value = spring.getCurrentValue();\n\n        var coordianteX = void 0;\n        var coordianteY = void 0;\n        var directionFactor = void 0;\n\n        if (lastThrow.direction === _Direction2.default.RIGHT || lastThrow.direction === _Direction2.default.LEFT) {\n          directionFactor = lastThrow.direction === _Direction2.default.RIGHT ? 1 : -1;\n          coordianteX = _rebound2.default.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromX, throwOutDistance * directionFactor);\n          coordianteY = lastThrow.fromY;\n        } else if (lastThrow.direction === _Direction2.default.UP || lastThrow.direction === _Direction2.default.DOWN) {\n          directionFactor = lastThrow.direction === _Direction2.default.DOWN ? 1 : -1;\n          coordianteX = lastThrow.fromX;\n          coordianteY = _rebound2.default.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromY, throwOutDistance * directionFactor);\n        }\n\n        _onSpringUpdate(coordianteX, coordianteY);\n      }\n    });\n\n    /**\n     * Transforms card position based on the current environment variables.\n     *\n     * @returns {undefined}\n     */\n    doMove = function doMove() {\n      if (currentX === lastX && currentY === lastY) {\n        return;\n      }\n\n      lastX = currentX;\n      lastY = currentY;\n\n      var coordinateX = lastTranslate.coordinateX + currentX;\n      var coordianteY = lastTranslate.coordinateY + currentY;\n      var rotation = config.rotation(coordinateX, coordianteY, targetElement, config.maxRotation);\n\n      config.transform(targetElement, coordinateX, coordianteY, rotation);\n\n      eventEmitter.trigger('dragmove', {\n        offset: coordinateX,\n        target: targetElement,\n        throwDirection: computeDirection(coordinateX, coordianteY, config.allowedDirections),\n        throwOutConfidence: config.throwOutConfidence(coordinateX, coordianteY, targetElement)\n      });\n    };\n\n    /**\n     * Invoked every time the physics solver updates the Spring's value.\n     *\n     * @param {number} coordinateX\n     * @param {number} coordinateY\n     * @returns {undefined}\n     */\n    _onSpringUpdate = function _onSpringUpdate(coordinateX, coordinateY) {\n      var rotation = config.rotation(coordinateX, coordinateY, targetElement, config.maxRotation);\n\n      lastTranslate.coordinateX = coordinateX || 0;\n      lastTranslate.coordinateY = coordinateY || 0;\n\n      config.transform(targetElement, coordinateX, coordinateY, rotation);\n    };\n\n    /**\n     * @param {Card.THROW_IN|Card.THROW_OUT} where\n     * @param {number} fromX\n     * @param {number} fromY\n     * @param {Direction} [direction]\n     * @returns {undefined}\n     */\n    throwWhere = function throwWhere(where, fromX, fromY, direction) {\n      lastThrow.fromX = fromX;\n      lastThrow.fromY = fromY;\n\n      // If direction argument is not set, compute it from coordinates.\n      lastThrow.direction = direction || computeDirection(fromX, fromY, config.allowedDirections);\n\n      if (where === Card.THROW_IN) {\n        Card.appendToParent(targetElement);\n        springThrowIn.setCurrentValue(0).setAtRest().setEndValue(1);\n\n        eventEmitter.trigger('throwin', {\n          target: targetElement,\n          throwDirection: lastThrow.direction\n        });\n      } else if (where === Card.THROW_OUT) {\n        Card.appendToParent(targetElement);\n        springThrowOut.setCurrentValue(0).setAtRest().setVelocity(100).setEndValue(1);\n\n        eventEmitter.trigger('throwout', {\n          target: targetElement,\n          throwDirection: lastThrow.direction\n        });\n\n        /* Emits more accurate events about specific directions */\n        eventEmitter.trigger(throwDirectionToEventName[lastThrow.direction], {\n          target: targetElement,\n          throwDirection: lastThrow.direction\n        });\n      } else {\n        throw new Error('Invalid throw event.');\n      }\n    };\n  };\n\n  construct();\n\n  /**\n   * Alias\n   */\n  card.on = eventEmitter.on;\n  card.trigger = eventEmitter.trigger;\n\n  /**\n   * Throws a card into the stack from an arbitrary position.\n   *\n   * @param {number} coordinateX\n   * @param {number} coordinateY\n   * @param {Direction} [direction]\n   * @returns {undefined}\n   */\n  card.throwIn = function (coordinateX, coordinateY, direction) {\n    throwWhere(Card.THROW_IN, coordinateX, coordinateY, direction);\n  };\n\n  /**\n   * Throws a card out of the stack in the direction away from the original offset.\n   *\n   * @param {number} coordinateX\n   * @param {number} coordinateY\n   * @param {Direction} [direction]\n   * @returns {undefined}\n   */\n  card.throwOut = function (coordinateX, coordinateY, direction) {\n    throwWhere(Card.THROW_OUT, coordinateX, coordinateY, direction);\n  };\n\n  /**\n   * Unbinds all Hammer.Manager events.\n   * Removes the listeners from the physics simulation.\n   *\n   * @returns {undefined}\n   */\n  card.destroy = function () {\n    mc.destroy();\n    springThrowIn.destroy();\n    springThrowOut.destroy();\n\n    stack.destroyCard(card);\n  };\n\n  return card;\n};\n\n/**\n * Creates a configuration object.\n *\n * @param {Object} config\n * @returns {Object}\n */\nCard.makeConfig = function () {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var defaultConfig = {\n    allowedDirections: [_Direction2.default.RIGHT, _Direction2.default.LEFT, _Direction2.default.UP],\n    isThrowOut: Card.isThrowOut,\n    maxRotation: 20,\n    maxThrowOutDistance: 500,\n    minThrowOutDistance: 400,\n    rotation: Card.rotation,\n    throwOutConfidence: Card.throwOutConfidence,\n    throwOutDistance: Card.throwOutDistance,\n    transform: Card.transform\n  };\n\n  return _lodash2.default.assign({}, defaultConfig, config);\n};\n\n/**\n * Uses CSS transform to translate element position and rotation.\n *\n * Invoked in the event of `dragmove` and every time the physics solver is triggered.\n *\n * @param {HTMLElement} element\n * @param {number} coordinateX Horizontal offset from the startDrag.\n * @param {number} coordinateY Vertical offset from the startDrag.\n * @param {number} rotation\n * @returns {undefined}\n */\nCard.transform = function (element, coordinateX, coordinateY, rotation) {\n  element.style[(0, _vendorPrefix2.default)('transform')] = 'translate3d(0, 0, 0) translate(' + coordinateX + 'px, ' + coordinateY + 'px) rotate(' + rotation + 'deg)';\n};\n\n/**\n * Append element to the parentNode.\n *\n * This makes the element first among the siblings. The reason for using\n * this as opposed to zIndex is to allow CSS selector :nth-child.\n *\n * Invoked in the event of mousedown.\n * Invoked when card is added to the stack.\n *\n * @param {HTMLElement} element The target element.\n * @returns {undefined}\n */\nCard.appendToParent = function (element) {\n  var parentNode = element.parentNode;\n  var siblings = (0, _utilities.elementChildren)(parentNode);\n  var targetIndex = siblings.indexOf(element);\n  var appended = targetIndex + 1 !== siblings.length;\n\n  if (appended) {\n    parentNode.removeChild(element);\n    parentNode.appendChild(element);\n  }\n\n  return appended;\n};\n\n/**\n * Prepend element to the parentNode.\n *\n * This makes the element last among the siblings.\n *\n * Invoked when card is added to the stack (when prepend is true).\n *\n * @param {HTMLElement} element The target element.\n * @return {undefined}\n */\nCard.prependToParent = function (element) {\n  var parentNode = element.parentNode;\n\n  parentNode.removeChild(element);\n  parentNode.insertBefore(element, parentNode.firstChild);\n};\n\n/**\n * Returns a value between 0 and 1 indicating the completeness of the throw out condition.\n *\n * Ration of the absolute distance from the original card position and element width.\n *\n * @param {number} xOffset Distance from the dragStart.\n * @param {number} yOffset Distance from the dragStart.\n * @param {HTMLElement} element Element.\n * @returns {number}\n */\nCard.throwOutConfidence = function (xOffset, yOffset, element) {\n  var xConfidence = Math.min(Math.abs(xOffset) / element.offsetWidth, 1);\n  var yConfidence = Math.min(Math.abs(yOffset) / element.offsetHeight, 1);\n\n  return Math.max(xConfidence, yConfidence);\n};\n\n/**\n * Determines if element is being thrown out of the stack.\n *\n * Element is considered to be thrown out when throwOutConfidence is equal to 1.\n *\n * @param {number} xOffset Distance from the dragStart.\n * @param {number} yOffset Distance from the dragStart.\n * @param {HTMLElement} element Element.\n * @param {number} throwOutConfidence config.throwOutConfidence\n * @returns {boolean}\n */\nCard.isThrowOut = function (xOffset, yOffset, element, throwOutConfidence) {\n  return throwOutConfidence === 1;\n};\n\n/**\n * Calculates a distances at which the card is thrown out of the stack.\n *\n * @param {number} min\n * @param {number} max\n * @returns {number}\n */\nCard.throwOutDistance = function (min, max) {\n  return _lodash2.default.random(min, max);\n};\n\n/**\n * Calculates rotation based on the element x and y offset, element width and maxRotation variables.\n *\n * @param {number} coordinateX Horizontal offset from the startDrag.\n * @param {number} coordinateY Vertical offset from the startDrag.\n * @param {HTMLElement} element Element.\n * @param {number} maxRotation\n * @returns {number} Rotation angle expressed in degrees.\n */\nCard.rotation = function (coordinateX, coordinateY, element, maxRotation) {\n  var horizontalOffset = Math.min(Math.max(coordinateX / element.offsetWidth, -1), 1);\n  var verticalOffset = (coordinateY > 0 ? 1 : -1) * Math.min(Math.abs(coordinateY) / 100, 1);\n  var rotation = horizontalOffset * verticalOffset * maxRotation;\n\n  return rotation;\n};\n\nCard.THROW_IN = 'in';\nCard.THROW_OUT = 'out';\n\nexports.default = Card;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Direction = {\n  DOWN: Symbol('DOWN'),\n  INVALID: Symbol('INVALID'),\n  LEFT: Symbol('LEFT'),\n  RIGHT: Symbol('RIGHT'),\n  UP: Symbol('UP')\n};\n\nexports.default = Direction;\nmodule.exports = exports['default'];","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport { Textfit } from 'react-textfit';\nimport './index.css';\nvar swing = require('./swing');\nvar convert = require('./convert.js');\n\nconst Direction = swing.Direction;\n\nclass Card extends Component {\n  /*\n    Card object display a front and a back\n  */\n  constructor(props) {\n    super(props);\n\n    /* Add spaces every 3 digits */\n    let [left, right] = String(props.value).split('.');\n    left = left.split('');\n    for (var i = 0; i < Math.ceil(left.length / 3) - 1; i++) {\n      left.splice(left.length - (i + ((i+1)*3)), 0, ' ');\n    }\n    left = left.join('');\n    let number = [left].concat([right]).filter((e) => e).join('.');\n\n    this.state = {\n      number: number,\n      romaji: convert.web_convert(props.value, 'R'),\n      kanji: convert.web_convert(props.value, 'K'),\n      hiragana: convert.web_convert(props.value, 'H'),\n      isFront: true,\n    }\n  }\n\n  handleClick(e) {\n    this.setState({isFront: !this.state.isFront});\n  }\n\n  front() {\n    return <div className=\"front\">\n      <Textfit>\n        <span className=\"number\">{this.state.number}</span>\n      </Textfit>\n    </div>;\n  }\n\n  back() {\n    return <div className=\"back\">\n      <Textfit>\n        <span className=\"number\">{this.state.number}</span>\n        <br />\n        {this.props.settings.dispRomaji && \n          <span className=\"romaji\">{this.state.romaji}</span>\n        }\n        {this.props.settings.dispRomaji && <br />}\n        {this.props.settings.dispHiragana && \n          <span className=\"hiragana\">{this.state.hiragana}</span>\n        }\n        {this.props.settings.dispHiragana && <br />}\n        {this.props.settings.dispKanji &&\n          <span className=\"kanji\">{this.state.kanji}</span>\n        }\n      </Textfit>\n    </div>;\n  }\n\n  render(props) {\n    return <div\n      className=\"card\"\n      onClick={(e) => this.handleClick(e)}\n      >\n      {this.state.isFront ? this.front() : this.back()}\n    </div>;\n  }\n}\n\n\nclass NumberGenerator {\n  /* Generate random numbers */\n  constructor(props) {\n    props = props || {};\n    this.state = {\n      min: props.min || 0,\n      max: props.max || 999999,\n    }\n  }\n\n  rand(min, max) {\n    return Math.floor(\n        Math.random() * (max - min + 1) + min\n      );\n  }\n\n  next(props) {\n    // TODO: Refactor \n    const level = (props||{}).level;\n    if (level === 0) {\n      // Numbers from 0 to 10\n      return this.rand(0, 11)\n    } else if (level === 1) {\n      // Numbers from 0 to 100\n      return this.rand(0, 101)\n    } else if (level === 2) {\n      // Special cases numbers (300, 800 and so)\n      const di = convert.romaji_dict;\n      const keys = Object.keys(di).slice(0,-1);\n      const ind = parseInt(Math.random() * keys.length);\n      return keys[ind];\n    } else if (level === 3) {\n      // Numbers from 10 to 99 999\n      return this.rand(10, 100000);\n    }\n  }\n}\n\nclass ReactSwing extends Component {\n  /* Rewrite of `react-swing` to allow dynamic creation and destruction of cards */\n  /* React wrapper for `swing` js library */\n\n  /* `swing` was modified to not reorder element when stack.createCard is called\n  because this was resulting in cards not being created and some created multiple\n  time*/\n  /* An `update` function was created to automatically add and remove cards based\n  on the childrens of the stack DOMElement (pointed by `props.id`) */\n  /* All of this so it is possible to add and remove cards by addind/removing\n  childs from `props.id` */\n\n  static Events = [\n    'throwout',\n    'throwoutend',\n    'throwoutleft',\n    'throwoutright',\n    'throwin',\n    'throwinend',\n    'dragstart',\n    'dragmove',\n    'dragend',\n  ];\n\n  constructor(props) {\n    super(props);\n\n    /* Create the Swing stack */\n    let stack = swing.Stack(props.id, props.config || {});\n\n    // Bind each event handler passed in props to the stack\n    ReactSwing.Events.forEach(eventName => {\n      if (this.props[eventName]) {\n        stack.on(eventName, this.props[eventName]);\n      }\n    });\n\n    this.state = {\n      stack: stack,\n    };\n  }\n\n  componentDidMount() {\n\n    const { stack } = this.state;\n\n    // Create new cards and remove non existent ones\n    stack.update();\n\n    // React events should be bound to the DOM cards\n    // TODO: Do they really ?\n    // How to get a link between React Cards and DOM Cards ?\n\n    /*React.Children.forEach(children, (child, i) => {\n      let card = stack.createCard(cards[i], false);\n      ReactSwing.Events\n                .filter( e => child.props[e] )\n                .forEach(e => card.on(e, child.props[e]) );\n    });*/\n\n    this.setState({\n      stack,\n    });\n\n    // Makes it possible to have access to the swing.stack in an other object\n    if (this.props.setStack) {\n      this.props.setStack(stack);\n    }\n  }\n\n  componentDidUpdate(prevprops) {\n    // Create new cards and remove non existent ones\n    this.state.stack.update();\n  }\n\n  render() {\n    // tslint:disable-next-line\n    // TODO: `setStack` and `config`  were used here is it usefull ??\n    const { children } = this.props;\n\n\n    // TODO: What does this actually do ?\n    //  Is this required to render the children ?\n    //  Or is this only to add the handlers?\n    return (\n      <div id={this.props.id} className={this.props.className}>\n        {React.Children\n              .map(children, (child, index) => {\n                const childProps = Object\n                  .keys(child.props)\n                  .filter( k => ReactSwing.Events.indexOf(k) === -1)\n                  .reduce( (r, k) => {r[k] = child.props[k]; return r}, {});\n                  return React.createElement(child.type, childProps);\n              })\n        }\n      </div>\n    );\n  }\n}\n\nclass Settings extends Component{\n\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  render() {\n    return <div ref={this.ref}>\n      {['Romaji', 'Hiragana', 'Kanji'].map((e, i) =>\n          <div key={\"settingdisp\"+String(i)}>\n          <label htmlFor={\"disp\"+e}>{e}</label>\n            <input type=\"checkbox\" name={\"disp\"+e} id={\"disp\"+e}\n              defaultChecked={this.props.settings['disp'+e]}\n              onChange={this.props.handleInputChange}/>\n          </div>\n      )}\n      \n      Level\n        {Array(4).fill(0).map((_, i) =>\n          <div key={\"settinglevel\"+i}>\n            <label htmlFor={'level' + i}>{'Level' + i}</label>\n            <input\n              type=\"radio\" name=\"level\"\n              id={'level' + i} value={i}\n              defaultChecked={i === this.props.settings.level}\n              onChange={this.props.handleInputChange}\n            />\n          </div>\n          )\n        }\n    </div>;\n  }\n}\n\nclass App extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    var generator = new NumberGenerator();\n\n    this.state = {\n      seen_cards: 0,\n      card_list: [],\n      stack: null,\n      generator: generator,\n      settings: {level: 2, dispRomaji: true},\n    };\n\n    // defining defaults values for settings here\n    // TODO: maybe refactor so defaults are defined in Settings class\n\n    this.newCard();\n    this.newCard();\n  }\n\n  newCard() {\n    // Add a new number to card_list\n    // Also assign the card \"key\" which is unique for every card\n    // TODO: refactor this is not pure\n    this.state.seen_cards += 1;\n    this.state.card_list.unshift({\n      key: this.state.seen_cards,\n      number: this.state.generator.next(this.state.settings),\n    });\n    return {card_list: this.state.card_list,\n            seen_cards: this.state.seen_cards};\n  }\n\n  handleThrowEnd(e) {\n    // Getting the number of the card\n    const n = parseInt(e.target.children[0].children[0].textContent, 10);\n\n    // Remove its entry\n    const ind = this.state.card_list.indexOf(n);\n    var card_list = this.state.card_list.slice();\n    card_list.splice(ind, 1);\n\n    // This is not pure but is linked to the fact the newCard is not pure either\n    this.state.card_list = card_list;\n\n    // Adding a new number\n\n    let new_state = this.newCard();\n    this.setState(new_state);\n  }\n\n  settingsHandleInputChange(event) {\n    const target = event.target;\n    let value = target.type === 'checkbox' ?\n      target.checked : target.value;\n    const name = target.name;\n    let settings = this.state.settings;\n    if (name === 'level') {\n      value = parseInt(value);\n    }\n    settings[name] = value;\n    this.setState({\n      settings: settings,\n    })\n  }\n\n  render() {\n    /* Render the Swing stack and the cards using card_list */\n    // TODO: key should different for every card !\n    return (\n      <div>\n        <div id=\"viewport\">\n          <ReactSwing\n            config={{allowedDirections: [\n              Direction.RIGHT,\n              Direction.LEFT]}}\n            id=\"cardstack\"\n            className=\"stack\"\n            setStack={stack => this.setState({ stack })}\n            ref=\"stackEl\"\n            throwoutend={e => this.handleThrowEnd(e)}\n          >\n            {this.state.card_list.map((e) =>\n              <Card className=\"card\" value={e.number}\n                    key={e.key}\n                    settings={this.state.settings}/>\n            )}\n          </ReactSwing>\n        </div>\n        <Settings settings={this.state.settings}\n          handleInputChange={\n          (e) => this.settingsHandleInputChange(e)}/>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Stack = exports.Direction = exports.Card = undefined;\n\nvar _Card = require('./Card');\n\nvar _Card2 = _interopRequireDefault(_Card);\n\nvar _Direction = require('./Direction');\n\nvar _Direction2 = _interopRequireDefault(_Direction);\n\nvar _Stack = require('./Stack');\n\nvar _Stack2 = _interopRequireDefault(_Stack);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Card = _Card2.default;\nexports.Direction = _Direction2.default;\nexports.Stack = _Stack2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isTouchDevice = exports.elementChildren = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Return direct children elements.\n *\n * @see http://stackoverflow.com/a/27102446/368691\n * @param {HTMLElement} element\n * @returns {Array}\n */\nvar elementChildren = function elementChildren(element) {\n  return _lodash2.default.filter(element.childNodes, {\n    nodeType: 1\n  });\n};\n\n/**\n * @see http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript/4819886#4819886\n * @returns {boolean}\n */\nvar isTouchDevice = function isTouchDevice() {\n  return 'ontouchstart' in window || navigator.msMaxTouchPoints;\n};\n\nexports.elementChildren = elementChildren;\nexports.isTouchDevice = isTouchDevice;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _sister = require('sister');\n\nvar _sister2 = _interopRequireDefault(_sister);\n\nvar _rebound = require('rebound');\n\nvar _rebound2 = _interopRequireDefault(_rebound);\n\nvar _Card = require('./Card');\n\nvar _Card2 = _interopRequireDefault(_Card);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n/**\n * @param {Object} config Stack configuration.\n * @returns {Object} An instance of Stack object.\n */\nvar Stack = function Stack(id, config) {\n  var eventEmitter = void 0;\n  var index = void 0;\n  var springSystem = void 0;\n  var stack = void 0;\n  var list_id = void 0;\n\n  var construct = function construct() {\n    stack = {};\n    springSystem = new _rebound2.default.SpringSystem();\n    eventEmitter = (0, _sister2.default)();\n    index = [];\n    list_id = id;\n  };\n\n  construct();\n\n  /**\n   * Get the configuration object.\n   *\n   * @returns {Object}\n   */\n  stack.getConfig = function () {\n    return config;\n  };\n\n\n  /**\n   * Get the index array.\n   * (For debug/dev purpose only)\n   *\n   * @returns {Object}\n   */\n  stack.getIndex = function () {\n    return index;\n  }\n\n  /**\n   * Get a singleton instance of the SpringSystem physics engine.\n   *\n   * @returns {Sister}\n   */\n  stack.getSpringSystem = function () {\n    return springSystem;\n  };\n\n  /**\n   * Proxy to the instance of the event emitter.\n   *\n   * @param {string} eventName\n   * @param {string} listener\n   * @returns {undefined}\n   */\n  stack.on = function (eventName, listener) {\n    eventEmitter.on(eventName, listener);\n  };\n\n  /**\n   * Creates an instance of Card and associates it with an element.\n   *\n   * @param {HTMLElement} element\n   * @param {boolean} prepend\n   * @returns {Card}\n   */\n  stack.createCard = function (element, prepend) {\n    var card = (0, _Card2.default)(stack, element, prepend);\n    var events = ['throwout', 'throwoutend', 'throwoutleft', 'throwoutright', 'throwoutup', 'throwoutdown', 'throwin', 'throwinend', 'dragstart', 'dragmove', 'dragend'];\n\n    // Proxy Card events to the Stack.\n    events.forEach(function (eventName) {\n      card.on(eventName, function (data) {\n        eventEmitter.trigger(eventName, data);\n      });\n    });\n\n    index.push({\n      card: card,\n      element: element\n    });\n\n    return card;\n  };\n\n  /**\n   * Returns an instance of Card associated with an element.\n   *\n   * @param {HTMLElement} element\n   * @returns {Card|null}\n   */\n  stack.getCard = function (element) {\n    var group = _lodash2.default.find(index, {\n      element: element\n    });\n\n    if (group) {\n      return group.card;\n    }\n\n    return null;\n  };\n\n  /**\n   * Remove an instance of Card from the stack index.\n   *\n   * @param {Card} card\n   * @returns {null}\n   */\n  stack.destroyCard = function (card) {\n    eventEmitter.trigger('destroyCard', card);\n\n    return _lodash2.default.remove(index, {\n      card: card\n    });\n  };\n\n\n  /**\n   * Using the DOMElement #list_id, update index accordingly.\n   * Creating new elements and removing non existing ones.\n   *\n   * @param {Card} card\n   * @returns {null}\n   */\n  stack.update = function () {\n    let cards = document.getElementById(list_id).children;\n    // Bind unbound elements\n    Array.prototype.slice.call(cards)\n         .forEach( c => {\n          if (!this.getCard(c)) {\n            this.createCard(c);\n          }} );\n\n    // Unbind bound elements\n    index.forEach( o => \n      {if (!o.element.parentNode) {\n        this.destroyCard(o.card);\n      }}\n    );\n  }\n\n  return stack;\n};\n\nexports.default = Stack;\nmodule.exports = exports['default'];","// Transcrypt'ed from Python, 2019-09-30 15:39:20\n\nvar romaji_dict = {'.': 'ten', '0': 'zero', '1': 'ichi', '2': 'ni', '3': 'san', '4': 'yon', '5': 'go', '6': 'roku', '7': 'nana', '8': 'hachi', '9': 'kyuu', '10': 'juu', '100': 'hyaku', '1000': 'sen', '10000': 'man', '100000000': 'oku', '300': 'sanbyaku', '600': 'roppyaku', '800': 'happyaku', '3000': 'sanzen', '8000': 'hassen'};\nvar kanji_dict = {'.': '点', '0': '零', '1': '一', '2': '二', '3': '三', '4': '四', '5': '五', '6': '六', '7': '七', '8': '八', '9': '九', '10': '十', '100': '百', '1000': '千', '10000': '万', '100000000': '億', '300': '三百', '600': '六百', '800': '八百', '3000': '三千', '8000': '八千'};\nvar hiragana_dict = {'.': 'てん', '0': 'ゼロ', '1': 'いち', '2': 'に', '3': 'さん', '4': 'よん', '5': 'ご', '6': 'ろく', '7': 'なな', '8': 'はち', '9': 'きゅう', '10': 'じゅう', '100': 'ひゃく', '1000': 'せん', '10000': 'まん', '100000000': 'おく', '300': 'さんびゃく', '600': 'ろっぴゃく', '800': 'はっぴゃく', '3000': 'さんぜん', '8000': 'はっせん'};\nvar key_dict = {'K': kanji_dict, 'H': hiragana_dict, 'R': romaji_dict};\n\nvar len_one = function (convert_num, requested_dict) {\n\treturn requested_dict[convert_num];\n};\n\nvar len_two = function (convert_num, requested_dict) {\n\tif (convert_num[0] === '0') {\n\t\treturn len_one(convert_num[1], requested_dict);\n\t}\n\tif (convert_num === '10') {\n\t\treturn requested_dict['10'];\n\t}\n\tif (convert_num[0] === '1') {\n\t\treturn (requested_dict['10'] + ' ') + len_one(convert_num[1], requested_dict);\n\t} else if (convert_num[1] === '0') {\n\t\treturn (len_one(convert_num[0], requested_dict) + ' ') + requested_dict['10'];\n\t}\n\tvar num_list = [];\n\tconvert_num.split('').forEach(\n        x => num_list.push(requested_dict[x]));\n\tnum_list.splice(1, 0, requested_dict['10']);\n\treturn num_list.join(' ');;\n};\n\nvar len_three = function (convert_num, requested_dict) {\n\tvar num_list = [];\n\tif (convert_num[0] === '1') {\n\t\tnum_list.push(requested_dict['100']);\n\t}\n\telse if (convert_num[0] === '3') {\n\t\tnum_list.push(requested_dict['300']);\n\t}\n\telse if (convert_num[0] === '6') {\n\t\tnum_list.push(requested_dict['600']);\n\t}\n\telse if (convert_num[0] === '8') {\n\t\tnum_list.push(requested_dict['800']);\n\t}\n\telse {\n\t\tnum_list.push(requested_dict[convert_num[0]]);\n\t\tnum_list.push(requested_dict['100']);\n\t}\n\tif (convert_num.slice(1) === '00' && convert_num.length === 3) {\n\t\t// pass;\n\t}\n\telse if (convert_num[1] === '0') {\n\t\tnum_list.push(requested_dict[convert_num[2]]);\n\t}\n\telse {\n\t\tnum_list.push(len_two(convert_num.slice(1), requested_dict));\n\t}\n\treturn num_list.join(' ');\n};\n\nvar len_four = function (convert_num, requested_dict) {\n\tvar num_list = [];\n\tif (convert_num === '0000') {\n\t\treturn '';\n\t}\n\twhile (convert_num[0] === '0') {\n\t\tconvert_num = convert_num.slice(1);\n\t}\n\tif (convert_num.length === 1) {\n\t\treturn len_one(convert_num, requested_dict);\n\t}\n\telse if (convert_num.length === 2) {\n\t\treturn len_two(convert_num, requested_dict);\n\t}\n\telse if (convert_num.length === 3) {\n\t\treturn len_three(convert_num, requested_dict);\n\t}\n\telse {\n\t\tif (convert_num[0] === '1') {\n\t\t\tnum_list.push(requested_dict['1000']);\n\t\t}\n\t\telse if (convert_num[0] === '3') {\n\t\t\tnum_list.push(requested_dict['3000']);\n\t\t}\n\t\telse if (convert_num[0] === '8') {\n\t\t\tnum_list.push(requested_dict['8000']);\n\t\t}\n\t\telse {\n\t\t\tnum_list.push(requested_dict[convert_num[0]]);\n\t\t\tnum_list.push(requested_dict['1000']);\n\t\t}\n\t\tif (convert_num.slice(1) === '000' && convert_num.length === 4) {\n\t\t\t// pass;\n\t\t}\n\t\telse if (convert_num[1] === '0') {\n\t\t\tnum_list.push(len_two(convert_num.slice(2), requested_dict));\n\t\t}\n\t\telse {\n\t\t\tnum_list.push(len_three(convert_num.slice(1), requested_dict));\n\t\t}\n\t\treturn num_list.join(' ');\n\t}\n};\n\nvar len_x = function (convert_num, requested_dict) {\n\tvar num_list = [];\n\tif (convert_num.slice(0, -4).length === 1) {\n\t\tnum_list.push(requested_dict[convert_num.slice(0, -4)]);\n\t\tnum_list.push(requested_dict['10000']);\n\t}\n\telse if (convert_num.slice(0, -4).length === 2) {\n\t\tnum_list.push(len_two(convert_num.slice(0, 2), requested_dict));\n\t\tnum_list.push(requested_dict['10000']);\n\t}\n\telse if (convert_num.slice(0, -4).length === 3) {\n\t\tnum_list.push(len_three(convert_num.slice(0, 3), requested_dict));\n\t\tnum_list.push(requested_dict['10000']);\n\t}\n\telse if (convert_num.slice(0, -4).length === 4) {\n\t\tnum_list.push(len_four(convert_num.slice(0, 4), requested_dict));\n\t\tnum_list.push(requested_dict['10000']);\n\t}\n\telse if (convert_num.slice(0, -4).length === 5) {\n\t\tnum_list.push(requested_dict[convert_num[0]]);\n\t\tnum_list.push(requested_dict['100000000']);\n\t\tnum_list.push(len_four(convert_num.slice(1, 5), requested_dict));\n\t\tif (convert_num.slice(1, 5) !== '0000') {\n\t\t\tnum_list.push(requested_dict['10000']);\n\t\t}\n\t}\n\telse {\n\t\treturn 'Not yet implemented, please choose a lower number.';\n\t}\n\tnum_list.push(len_four(convert_num.slice(-4), requested_dict));\n\treturn num_list.join(' ');\n};\n\nvar convert = function (convert_num, requested_dict) {\n\n\tif (convert_num.length === 1) {\n\t\treturn len_one(convert_num, requested_dict);\n\t}\n\telse if (convert_num.length === 2) {\n\t\treturn len_two(convert_num, requested_dict);\n\t}\n\telse if (convert_num.length === 3) {\n\t\treturn len_three(convert_num, requested_dict);\n\t}\n\telse if (convert_num.length === 4) {\n\t\treturn len_four(convert_num, requested_dict);\n\t}\n\telse {\n\t\treturn len_x(convert_num, requested_dict);\n\t}\n};\n\nvar split_point = function (num, dict_choice) {\n\tconst join_char = dict_choice === 'R' ? 't' : 'っ';\n\tnum = num.split('.');\n\tvar right_res = '';\n\tvar left_res = '';\n\tright_res = num[1].split('').forEach(\n\t\tx => len_one(x, key_dict[dict_choice])).join(' ')\n\tleft_res = convert(num[0], dict_choice);\n\n\tif (num[0][num[0].length - 1] === '0'\n\t\t&& num[0][num[0].length - 2] !== '0') {\n\t\t// TODO What does that mean ?\n\t\tleft_res = left_res.slice(0, -1) + join_char;\n\t}\n\treturn [left_res,\n\t\t\tkey_dict[dict_choice]['.'],\n\t\t\tright_res].join(' ')\n};\n\nvar web_convert = function (convert_num, dict_choice) {\n\n\tlet result = null;\n\tconvert_num = String(convert_num);\n\tconvert_num = convert_num.replace(',', '');\n\t// Stripping 0's from the beginning and the end\n\t//  but the integer part should not be empty\n\tconvert_num = convert_num.replace(/^0+/, '0').replace(/\\.\\d+0+$/, '');\n\tconvert_num = convert_num.replace(/^0([1-9])/, '$1');\n\n\tif (convert_num.indexOf('.') >= 0) {\n\t\tresult = split_point(convert_num, dict_choice);\n\t} else {\n\t\tresult = convert(convert_num, key_dict[dict_choice]);\n\t}\n\n\tif (dict_choice !== 'R') {\n\t\t// Removing spaces for Hiragana and Kanji\n\t\tresult = result.replace(' ', '');\n\t}\n\treturn result;\n};\n\nmodule.exports = {\n\tweb_convert: web_convert,\n\tromaji_dict: romaji_dict,\n\tkanji_dict: kanji_dict,\n\thiragana_dict: hiragana_dict\n}\n\n//# sourceMappingURL=convert2.map"],"sourceRoot":""}